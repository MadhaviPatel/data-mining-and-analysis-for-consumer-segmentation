# -*- coding: utf-8 -*-
"""Madhavi_Patel_Assignment2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V3M8wKbuGiwiqqnilrrwDD1l_9-hHVtU
"""

#import important libraries
import pandas as pd
import numpy as np
import datetime as dt

pip install openpyxl

#path to open file
file_path = "/content/Online Retail.xlsx"

#read the data from excel file
raw_data = pd.read_excel(file_path)

raw_data

#information of data
raw_data.info()

#find the null values 
raw_data.isnull().sum()

#size of data with null values
raw_data.size



#drop null values
new_data = raw_data.dropna(axis=0)

#new dataframe after removing null values
new_data.size

#convert customer ID to int type and consider the data with the quantity>0
new_data['CustomerID'] = new_data['CustomerID'].astype(int)
final_data = new_data[(new_data['Quantity']>0)]

#get total price
final_data['Total_Price'] = final_data['Quantity']*final_data['UnitPrice']
final_data.head(10)

#formatting the date to pandas datetime
final_data['Date'] = pd.to_datetime(final_data['InvoiceDate'])
final_data['InvoiceDate'].min(),final_data['InvoiceDate'].max()

#set current date 
current_date = dt.datetime(2011,12,10)

#find the recency frequency and monetary values 
rfm_data = final_data.groupby('CustomerID').agg({'Date': lambda x: (curr_date - x.max()).days,
                                             'InvoiceNo': lambda x: len(x),
                                             'Total_Price': lambda x: x.sum()})

rfm_data['Date'] = rfm_data['Date'].astype(int)
rfm_data.rename(columns={'Date': 'recency','InvoiceNo': 'frequency','Total_Price': 'monetary_value'}, inplace=True)

#Â top 5 values
rfm_data.head()

rfm_data.describe()

rfm_data["Recency_scr"] = pd.qcut(rfm_data['recency'], 5, labels=[5, 4, 3, 2, 1])
rfm_data["Frequency_scr"] = pd.qcut(rfm_data['frequency'], 5, labels=[1, 2, 3, 4, 5])
rfm_data["Monetary_scr"] = pd.qcut(rfm_data['monetary_value'], 5, labels=[1, 2, 3, 4, 5])
#find the RMF score using the values we find above
rfm_data["RFM_Score"] = (rfm_data['Recency_scr'].astype(str) +
                    rfm_data['Frequency_scr'].astype(str) +
                    rfm_data['Monetary_scr'].astype(str))

rfm_data.head(5)

"""# Who are my best Customers?"""

rfm_data[rfm_data['RFM_Score']=='555'].sort_values('monetary_value', ascending=False).head(5)

"""# Customers at verge of churning"""

rfm_data[rfm_data['RFM_Score']=='211'].sort_values('monetary_value', ascending=False).head(5)

"""# Group of potential customers to be converted into more profitable customers"""

rfm_data[rfm_data['RFM_Score']=='434'].sort_values('monetary_value', ascending=False).head(5)

"""# Lost customer who do not need much attention."""

rfm_data[rfm_data['RFM_Score']=='111'].sort_values('monetary_value', ascending=False).head(5)

"""# Customer you must retain."""

rfm_data[rfm_data['RFM_Score']=='245'].sort_values('monetary_value', ascending=False).head(5)

"""# Loyal Customer"""

rfm_data[rfm_data['RFM_Score']=='444'].sort_values('monetary_value', ascending=False).head(5)

"""# Group of customer most likely to respond your current campaign."""

rfm_data[rfm_data['RFM_Score']=='432'].sort_values('monetary_value', ascending=False).head(5)

